{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, EventEmitter, Output } from \"@angular/core\";\nlet GameControlComponent = class GameControlComponent {\n  constructor() {\n    this.intervalDone = new EventEmitter();\n    this.lastNumber = 0;\n  }\n  startGame() {\n    this.interval = setInterval(() => {\n      this.intervalDone.emit(this.lastNumber + 1);\n      this.lastNumber++;\n    }, 1000);\n  }\n};\n__decorate([Output(), __metadata(\"design:type\", Object)], GameControlComponent.prototype, \"intervalDone\", void 0);\nGameControlComponent = __decorate([Component({\n  selector: \"app-game-control\",\n  templateUrl: \"./game-control.component.html\",\n  styleUrls: [\"./game-control.component.css\"]\n})], GameControlComponent);\nexport { GameControlComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}